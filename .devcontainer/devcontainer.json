// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.178.0/containers/typescript-node

{
  "name": "Data Portal UI",

  "dockerComposeFile": [
    // the main compose file containing all data portal services,
    // this file is obtained from an external repository
    "docker-compose.yml",

    // a compose file that overwrite the ui service for development:
    "docker-compose.override.yml"
  ],

  // The 'service' property is the name of the service for the container that VS Code should
  // use. Update this value and .devcontainer/docker-compose.yml to the real service name.
  "service": "data_portal_ui_svc",

  // The optional 'workspaceFolder' property is the path VS Code should open by default when
  // connected. This is typically a file mount in .devcontainer/docker-compose.yml
  "workspaceFolder": "/workspace",

  "customizations": {
    "vscode": {
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash"
          }
        },

        "eslint.enable": true,
        "prettier.enable": true,

        "python.pythonPath": "/usr/local/bin/python",
        "python.languageServer": "Pylance",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.formatting.autopep8Path": "/usr/local/py-utils/bin/autopep8",
        "python.formatting.blackPath": "/usr/local/py-utils/bin/black",
        "python.formatting.yapfPath": "/usr/local/py-utils/bin/yapf",
        "python.formatting.provider": "black",
        "python.analysis.typeCheckingMode": "basic",
        "python.linting.banditPath": "/usr/local/py-utils/bin/bandit",
        "python.linting.mypyPath": "/usr/local/py-utils/bin/mypy",
        "python.linting.pycodestylePath": "/usr/local/py-utils/bin/pycodestyle",
        "python.linting.pydocstylePath": "/usr/local/py-utils/bin/pydocstyle",
        "python.linting.pylintPath": "/usr/local/py-utils/bin/pylint",
        "python.testing.pytestPath": "/usr/local/py-utils/bin/pytest",
        "python.testing.unittestEnabled": false,
        "python.testing.pytestEnabled": true,

        "editor.formatOnSave": true,
        "editor.renderWhitespace": "all",
        "editor.rulers": [88],
        "licenser.license": "Custom",
        "licenser.customHeaderFile": "/workspace/.devcontainer/license_header.txt"
      },

      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "mikestead.dotenv",
        "ms-azuretools.vscode-docker",
        "dbaeumer.vscode-eslint",
        "paulshen.paul-typescript-toolkit",
        "esbenp.prettier-vscode",
        "ms-python.python",
        "ms-python.vscode-pylance",
        "redhat.vscode-yaml",
        "eamodio.gitlens",
        "github.vscode-pull-request-github",
        "streetsidesoftware.code-spell-checker",
        "yzhang.markdown-all-in-one",
        "visualstudioexptteam.vscodeintellicode",
        "ymotongpoo.licenser",
        "editorconfig.editorconfig"
      ]
    }
  },

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [443, 8000, 8001, 8002],

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "dev_install",

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "node",

  "features": {
    "python": "3.10"
  }
}
